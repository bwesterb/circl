// Code generated by command: go run src.go -out ../amd64.s -stubs ../stubs_amd64.go -pkg common. DO NOT EDIT.

// +build amd64

#include "textflag.h"

// func addAVX2(p *[256]int16, a *[256]int16, b *[256]int16)
// Requires: AVX, AVX2
TEXT ·addAVX2(SB), NOSPLIT, $0-24
	MOVQ    p+0(FP), AX
	MOVQ    a+8(FP), CX
	MOVQ    b+16(FP), DX
	VMOVDQU (CX), Y0
	VMOVDQU 32(CX), Y2
	VMOVDQU 64(CX), Y4
	VMOVDQU 96(CX), Y6
	VMOVDQU 128(CX), Y8
	VMOVDQU 160(CX), Y10
	VMOVDQU 192(CX), Y12
	VMOVDQU 224(CX), Y14
	VMOVDQU (DX), Y1
	VMOVDQU 32(DX), Y3
	VMOVDQU 64(DX), Y5
	VMOVDQU 96(DX), Y7
	VMOVDQU 128(DX), Y9
	VMOVDQU 160(DX), Y11
	VMOVDQU 192(DX), Y13
	VMOVDQU 224(DX), Y15
	VPADDW  Y0, Y1, Y1
	VPADDW  Y2, Y3, Y3
	VPADDW  Y4, Y5, Y5
	VPADDW  Y6, Y7, Y7
	VPADDW  Y8, Y9, Y9
	VPADDW  Y10, Y11, Y11
	VPADDW  Y12, Y13, Y13
	VPADDW  Y14, Y15, Y15
	VMOVDQU Y1, (AX)
	VMOVDQU Y3, 32(AX)
	VMOVDQU Y5, 64(AX)
	VMOVDQU Y7, 96(AX)
	VMOVDQU Y9, 128(AX)
	VMOVDQU Y11, 160(AX)
	VMOVDQU Y13, 192(AX)
	VMOVDQU Y15, 224(AX)
	VMOVDQU 256(CX), Y0
	VMOVDQU 288(CX), Y2
	VMOVDQU 320(CX), Y4
	VMOVDQU 352(CX), Y6
	VMOVDQU 384(CX), Y8
	VMOVDQU 416(CX), Y10
	VMOVDQU 448(CX), Y12
	VMOVDQU 480(CX), Y14
	VMOVDQU 256(DX), Y1
	VMOVDQU 288(DX), Y3
	VMOVDQU 320(DX), Y5
	VMOVDQU 352(DX), Y7
	VMOVDQU 384(DX), Y9
	VMOVDQU 416(DX), Y11
	VMOVDQU 448(DX), Y13
	VMOVDQU 480(DX), Y15
	VPADDW  Y0, Y1, Y1
	VPADDW  Y2, Y3, Y3
	VPADDW  Y4, Y5, Y5
	VPADDW  Y6, Y7, Y7
	VPADDW  Y8, Y9, Y9
	VPADDW  Y10, Y11, Y11
	VPADDW  Y12, Y13, Y13
	VPADDW  Y14, Y15, Y15
	VMOVDQU Y1, 256(AX)
	VMOVDQU Y3, 288(AX)
	VMOVDQU Y5, 320(AX)
	VMOVDQU Y7, 352(AX)
	VMOVDQU Y9, 384(AX)
	VMOVDQU Y11, 416(AX)
	VMOVDQU Y13, 448(AX)
	VMOVDQU Y15, 480(AX)
	RET

// func subAVX2(p *[256]int16, a *[256]int16, b *[256]int16)
// Requires: AVX, AVX2
TEXT ·subAVX2(SB), NOSPLIT, $0-24
	MOVQ    p+0(FP), AX
	MOVQ    a+8(FP), CX
	MOVQ    b+16(FP), DX
	VMOVDQU (CX), Y0
	VMOVDQU 32(CX), Y2
	VMOVDQU 64(CX), Y4
	VMOVDQU 96(CX), Y6
	VMOVDQU 128(CX), Y8
	VMOVDQU 160(CX), Y10
	VMOVDQU 192(CX), Y12
	VMOVDQU 224(CX), Y14
	VMOVDQU (DX), Y1
	VMOVDQU 32(DX), Y3
	VMOVDQU 64(DX), Y5
	VMOVDQU 96(DX), Y7
	VMOVDQU 128(DX), Y9
	VMOVDQU 160(DX), Y11
	VMOVDQU 192(DX), Y13
	VMOVDQU 224(DX), Y15
	VPSUBW  Y1, Y0, Y1
	VPSUBW  Y3, Y2, Y3
	VPSUBW  Y5, Y4, Y5
	VPSUBW  Y7, Y6, Y7
	VPSUBW  Y9, Y8, Y9
	VPSUBW  Y11, Y10, Y11
	VPSUBW  Y13, Y12, Y13
	VPSUBW  Y15, Y14, Y15
	VMOVDQU Y1, (AX)
	VMOVDQU Y3, 32(AX)
	VMOVDQU Y5, 64(AX)
	VMOVDQU Y7, 96(AX)
	VMOVDQU Y9, 128(AX)
	VMOVDQU Y11, 160(AX)
	VMOVDQU Y13, 192(AX)
	VMOVDQU Y15, 224(AX)
	VMOVDQU 256(CX), Y0
	VMOVDQU 288(CX), Y2
	VMOVDQU 320(CX), Y4
	VMOVDQU 352(CX), Y6
	VMOVDQU 384(CX), Y8
	VMOVDQU 416(CX), Y10
	VMOVDQU 448(CX), Y12
	VMOVDQU 480(CX), Y14
	VMOVDQU 256(DX), Y1
	VMOVDQU 288(DX), Y3
	VMOVDQU 320(DX), Y5
	VMOVDQU 352(DX), Y7
	VMOVDQU 384(DX), Y9
	VMOVDQU 416(DX), Y11
	VMOVDQU 448(DX), Y13
	VMOVDQU 480(DX), Y15
	VPSUBW  Y1, Y0, Y1
	VPSUBW  Y3, Y2, Y3
	VPSUBW  Y5, Y4, Y5
	VPSUBW  Y7, Y6, Y7
	VPSUBW  Y9, Y8, Y9
	VPSUBW  Y11, Y10, Y11
	VPSUBW  Y13, Y12, Y13
	VPSUBW  Y15, Y14, Y15
	VMOVDQU Y1, 256(AX)
	VMOVDQU Y3, 288(AX)
	VMOVDQU Y5, 320(AX)
	VMOVDQU Y7, 352(AX)
	VMOVDQU Y9, 384(AX)
	VMOVDQU Y11, 416(AX)
	VMOVDQU Y13, 448(AX)
	VMOVDQU Y15, 480(AX)
	RET
